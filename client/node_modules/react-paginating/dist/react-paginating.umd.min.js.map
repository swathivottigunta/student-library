{"version":3,"file":"react-paginating.umd.min.js","sources":["../src/Pagination/Pagination.js"],"sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { getRange, getPageInfo } from 'paging-algorithm';\n\nfunction Pagination(props) {\n  const [currentPage, setCurrentPage] = useState(1);\n\n  if (props.currentPage && currentPage !== props.currentPage) {\n    setCurrentPage(parseInt(props.currentPage, 10));\n  }\n\n  const _getPageItemProps = props => {\n    const { pageValue, onPageChange: handlePageChange, ...rest } = props;\n\n    const onPageChange = e => {\n      if (typeof handlePageChange === 'function') {\n        handlePageChange(pageValue, e);\n      }\n      setCurrentPage(pageValue);\n    };\n\n    return {\n      onClick: onPageChange,\n      ...rest\n    };\n  };\n\n  const { total, limit, pageCount } = props;\n\n  const pageInfo = getPageInfo({\n    limit,\n    pageCount,\n    total,\n    page: currentPage\n  });\n\n  const { firstPage, lastPage, hasNextPage, hasPreviousPage, previousPage, nextPage, totalPages } = pageInfo;\n\n  const pages = total > 0 ? getRange(firstPage, lastPage) : [];\n\n  return (\n    <div>\n      {props.children({\n        pages,\n        previousPage,\n        nextPage,\n        totalPages,\n        currentPage,\n        hasNextPage,\n        hasPreviousPage,\n        getPageItemProps: _getPageItemProps\n      })}\n    </div>\n  );\n}\n\nPagination.propTypes = {\n  total: PropTypes.number.isRequired,\n  limit: PropTypes.number,\n  pageCount: PropTypes.number,\n  currentPage: PropTypes.number,\n  pageValue: PropTypes.number,\n  children: PropTypes.func.isRequired,\n  onPageChange: PropTypes.func\n};\n\nPagination.defaultProps = {\n  limit: 10,\n  pageCount: 5,\n  currentPage: 0,\n  pageValue: 0\n};\n\nexport default Pagination;\n"],"names":["Pagination","props","useState","currentPage","setCurrentPage","parseInt","total","limit","pageCount","pageInfo","getPageInfo","page","firstPage","lastPage","hasNextPage","hasPreviousPage","previousPage","nextPage","totalPages","pages","getRange","React","children","getPageItemProps","pageValue","handlePageChange","onPageChange","onClick","e","propTypes","PropTypes","number","isRequired","func","defaultProps"],"mappings":"4yCAIA,SAASA,EAAWC,WACoBC,WAAS,MAAxCC,OAAaC,OAEhBH,EAAME,aAAeA,IAAgBF,EAAME,aAC7CC,EAAeC,SAASJ,EAAME,YAAa,SAmBrCG,EAA4BL,EAA5BK,MAAOC,EAAqBN,EAArBM,MAAOC,EAAcP,EAAdO,UAEhBC,EAAWC,cAAY,CAC3BH,MAAAA,EACAC,UAAAA,EACAF,MAAAA,EACAK,KAAMR,IAGAS,EAA0FH,EAA1FG,UAAWC,EAA+EJ,EAA/EI,SAAUC,EAAqEL,EAArEK,YAAaC,EAAwDN,EAAxDM,gBAAiBC,EAAuCP,EAAvCO,aAAcC,EAAyBR,EAAzBQ,SAAUC,EAAeT,EAAfS,WAE7EC,EAAQb,EAAQ,EAAIc,WAASR,EAAWC,GAAY,UAGxDQ,2BACGpB,EAAMqB,SAAS,CACdH,MAAAA,EACAH,aAAAA,EACAC,SAAAA,EACAC,WAAAA,EACAf,YAAAA,EACAW,YAAAA,EACAC,gBAAAA,EACAQ,iBAvCoB,SAAAtB,OAChBuB,EAAuDvB,EAAvDuB,UAAyBC,EAA8BxB,EAA5CyB,iWAUjBC,QARmB,SAAAC,GACa,mBAArBH,GACTA,EAAiBD,EAAWI,GAE9BxB,EAAeoB,OAN8CvB,yFA4CnED,EAAW6B,UAAY,CACrBvB,MAAOwB,EAAUC,OAAOC,WACxBzB,MAAOuB,EAAUC,OACjBvB,UAAWsB,EAAUC,OACrB5B,YAAa2B,EAAUC,OACvBP,UAAWM,EAAUC,OACrBT,SAAUQ,EAAUG,KAAKD,WACzBN,aAAcI,EAAUG,MAG1BjC,EAAWkC,aAAe,CACxB3B,MAAO,GACPC,UAAW,EACXL,YAAa,EACbqB,UAAW"}