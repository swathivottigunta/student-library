{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nfunction getRange(start, end) {\n  return [...Array(end - start + 1)].map((_, i) => start + i);\n}\n\nexports.getRange = getRange;\n\nfunction getPageInfo(params) {\n  const limit = params.limit,\n        pageCount = params.pageCount,\n        total = params.total,\n        page = params.page;\n  const totalPages = Math.ceil(total / limit);\n  const totalResults = total;\n  let currentPage = page;\n\n  if (currentPage < 1) {\n    currentPage = 1;\n  }\n\n  if (currentPage > totalPages) {\n    currentPage = totalPages;\n  }\n\n  let firstPage = Math.max(1, currentPage - Math.floor(pageCount / 2));\n  let lastPage = Math.min(totalPages, currentPage + Math.floor(pageCount / 2));\n\n  if (lastPage - firstPage + 1 < pageCount) {\n    if (currentPage < totalPages / 2) {\n      lastPage = Math.min(totalPages, lastPage + (pageCount - (lastPage - firstPage)));\n    } else {\n      firstPage = Math.max(1, firstPage - (pageCount - (lastPage - firstPage)));\n    }\n  }\n\n  if (lastPage - firstPage + 1 > pageCount) {\n    if (currentPage > totalPages / 2) {\n      firstPage = firstPage + 1;\n    } else {\n      lastPage = lastPage - 1;\n    }\n  }\n\n  const pages = Math.min(lastPage - firstPage + 1, totalPages);\n  const previousPage = currentPage - 1;\n  const nextPage = currentPage + 1;\n  const hasPreviousPage = currentPage > 1;\n  const hasNextPage = currentPage < totalPages;\n  const firstResult = limit * (currentPage - 1);\n  const lastResult = limit * currentPage - 1;\n  const results = Math.min(lastResult - firstResult + 1, totalResults);\n  return {\n    totalPages,\n    pages,\n    currentPage,\n    firstPage,\n    lastPage,\n    previousPage,\n    nextPage,\n    hasPreviousPage,\n    hasNextPage,\n    totalResults,\n    results,\n    firstResult,\n    lastResult\n  };\n}\n\nexports.getPageInfo = getPageInfo;","map":null,"metadata":{},"sourceType":"script"}