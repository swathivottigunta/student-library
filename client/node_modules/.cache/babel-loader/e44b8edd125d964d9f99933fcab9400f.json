{"ast":null,"code":"import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { getPageInfo, getRange } from 'paging-algorithm';\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(source, true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(source).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest();\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}\n\nfunction Pagination(props) {\n  var _useState = useState(1),\n      _useState2 = _slicedToArray(_useState, 2),\n      currentPage = _useState2[0],\n      setCurrentPage = _useState2[1];\n\n  if (props.currentPage && currentPage !== props.currentPage) {\n    setCurrentPage(parseInt(props.currentPage, 10));\n  }\n\n  var _getPageItemProps = function _getPageItemProps(props) {\n    var pageValue = props.pageValue,\n        handlePageChange = props.onPageChange,\n        rest = _objectWithoutProperties(props, [\"pageValue\", \"onPageChange\"]);\n\n    var onPageChange = function onPageChange(e) {\n      if (typeof handlePageChange === 'function') {\n        handlePageChange(pageValue, e);\n      }\n\n      setCurrentPage(pageValue);\n    };\n\n    return _objectSpread2({\n      onClick: onPageChange\n    }, rest);\n  };\n\n  var total = props.total,\n      limit = props.limit,\n      pageCount = props.pageCount;\n  var pageInfo = getPageInfo({\n    limit: limit,\n    pageCount: pageCount,\n    total: total,\n    page: currentPage\n  });\n  var firstPage = pageInfo.firstPage,\n      lastPage = pageInfo.lastPage,\n      hasNextPage = pageInfo.hasNextPage,\n      hasPreviousPage = pageInfo.hasPreviousPage,\n      previousPage = pageInfo.previousPage,\n      nextPage = pageInfo.nextPage,\n      totalPages = pageInfo.totalPages;\n  var pages = total > 0 ? getRange(firstPage, lastPage) : [];\n  return React.createElement(\"div\", null, props.children({\n    pages: pages,\n    previousPage: previousPage,\n    nextPage: nextPage,\n    totalPages: totalPages,\n    currentPage: currentPage,\n    hasNextPage: hasNextPage,\n    hasPreviousPage: hasPreviousPage,\n    getPageItemProps: _getPageItemProps\n  }));\n}\n\nPagination.propTypes = {\n  total: PropTypes.number.isRequired,\n  limit: PropTypes.number,\n  pageCount: PropTypes.number,\n  currentPage: PropTypes.number,\n  pageValue: PropTypes.number,\n  children: PropTypes.func.isRequired,\n  onPageChange: PropTypes.func\n};\nPagination.defaultProps = {\n  limit: 10,\n  pageCount: 5,\n  currentPage: 0,\n  pageValue: 0\n};\nexport default Pagination;","map":null,"metadata":{},"sourceType":"module"}